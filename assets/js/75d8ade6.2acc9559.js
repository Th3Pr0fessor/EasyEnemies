"use strict";(self.webpackChunkeasy_enemies=self.webpackChunkeasy_enemies||[]).push([[448],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return p}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},E={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(n),p=a,d=m["".concat(l,".").concat(p)]||m[p]||E[p]||i;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5395:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return E}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={sidebar_position:4},l="EasyEnemies Settings",u={unversionedId:"module-settings",id:"module-settings",title:"EasyEnemies Settings",description:"Here are a list of EasyEnemies features that can be changed in the settings. (found in EasyEnemies.Settings Module)",source:"@site/docs/module-settings.md",sourceDirName:".",slug:"/module-settings",permalink:"/EasyEnemies/docs/module-settings",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/module-settings.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Enemy API",permalink:"/EasyEnemies/docs/tutorial-extras/enemy-api"}},c={},E=[{value:"Debugging",id:"debugging",level:2},{value:"DEBUG_MODE",id:"debug_mode",level:3},{value:"VISUALIZE",id:"visualize",level:3},{value:"GENERATE_ANIMATOR",id:"generate_animator",level:3},{value:"GENERATE_TEAMS",id:"generate_teams",level:3},{value:"GENERATE_ATTACK_RADIUS",id:"generate_attack_radius",level:3}],m={toc:E};function p(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"easyenemies-settings"},"EasyEnemies Settings"),(0,i.kt)("p",null,"Here are a list of EasyEnemies features that can be changed in the settings. (found in ",(0,i.kt)("inlineCode",{parentName:"p"},"EasyEnemies.Settings")," Module)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"local SETTINGS = {}\n\nSETTINGS.MODULE_NAME = script.Parent.Name\n\nSETTINGS.DEBUG_MODE = true\nSETTINGS.VISUALIZE = false\n\nSETTINGS.GENERATE_ANIMATOR = false -- For non-humanoid rigs (Beta Setting not fully functional)\nSETTINGS.GENERATE_TEAMS = true\nSETTINGS.GENERATE_ATTACK_RADIUS = true\n\n\nreturn SETTINGS\n")),(0,i.kt)("h2",{id:"debugging"},"Debugging"),(0,i.kt)("h3",{id:"debug_mode"},"DEBUG_MODE"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"SETTINGS.DEBUG_MODE")," Prints warnings to the console."),(0,i.kt)("h3",{id:"visualize"},"VISUALIZE"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"SETTINGS.VISUALIZE")," Creates path-finding visuals."),(0,i.kt)("hr",null),"# Generation",(0,i.kt)("h3",{id:"generate_animator"},"GENERATE_ANIMATOR"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"SETTINGS.GENERATE_ANIMATOR")," will create an ",(0,i.kt)("a",{parentName:"p",href:"https://developer.roblox.com/en-us/api-reference/class/Animator"},"animator")," instance for non-humanoid objects, this setting is incomplete."),(0,i.kt)("h3",{id:"generate_teams"},"GENERATE_TEAMS"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"SETTINGS.GENERATE_TEAMS")," will automatically create teams for the enemies you make, it works through model names. If two models have the same name and ",(0,i.kt)("inlineCode",{parentName:"p"},"GENERATE_TEAMS")," is enabled it will create a new team setup with said model name."),(0,i.kt)("h3",{id:"generate_attack_radius"},"GENERATE_ATTACK_RADIUS"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"SETTINGS.GENERATE_ATTACK_RADIUS")," will create an attack radius for the enemy via math using the Enemy's model size"))}p.isMDXComponent=!0}}]);